version: "3.8"

services:
  nginx:
    image: ppp300a/prj_dept-nginx:1.0.0
    build:
      context: .
      dockerfile: Dockerfile.nginx
    env_file: .env.prod
    volumes:
      - staticfiles-data:/var/prj_dept/staticfiles
    entrypoint: [ "nginx", "-g", "daemon off;" ]
    depends_on:
      web:
        condition: service_healthy
    ports:
      - "80:80"
    networks:
      - web_network
      - grafana_nginx_proxy_network


  mysql:
    image: ppp300a/prj_dept-mysql8:1.0.0
#    build:
#      context: .  # Dockerfile的位置
#      dockerfile: Dockerfile.mysql8
    env_file: .env.prod
    volumes:
      - mysql-data:/var/lib/mysql
    entrypoint: ["/usr/local/bin/mysql8-init.sh"]
    command:
      - "--max-connections=200"
      - "--slow-query-log=1"
      - "--long-query-time=2"
      - "--log-error=/var/log/mysql/mysql_error.log"
      - "--slow-query-log-file=/var/log/mysql/mysql_slow.log"
    ports:
      - "3306:3306"
    networks:
      - web_network


  web:
    image: ppp300a/prj_dept-web:1.0.0
    container_name: dept-web
    build:
      context: .  # Dockerfile的位置
      dockerfile: Dockerfile
      args:
        DJANGO_SETTINGS_MODULE: settings.prod
    env_file: .env.prod
    environment:
      - PYTHONPATH=/data/prj_dept
      - DJANGO_SETTINGS_MODULE=settings.prod
    volumes:
      - staticfiles-data:/data/prj_dept/staticfiles  # 提供給 nginx 靜態文件讀取使用
    entrypoint: [ "/bin/sh", "/data/prj_dept/start.prod.sh" ]
    depends_on:
      - mysql
      - redis
    healthcheck:
      test: [ "CMD", "python", "-c", "import http.client; conn = http.client.HTTPConnection('localhost', 8000); conn.request('HEAD', '/'); res = conn.getresponse();" ]
      interval: 60s
      timeout: 15s
      retries: 5
    ports:
      - "8000:8000"
    networks:
      - web_network


  redis:
    image: "redis:7.2.2-alpine3.18"
    env_file: .env.prod
    ports:
      - "6379:6379"
    networks:
      - web_network


  celery_worker:
    image: ppp300a/prj_dept-celery-test:1.0.1
    build:
      context: .  # Dockerfile的位置
      dockerfile: Dockerfile.test
    env_file:
      - .env.test
    environment:
      - PYTHONPATH=/data/prj_dept  # 當項目結構非django預設時需要使用
      - DJANGO_SETTINGS_MODULE=settings.prod  # 告诉 Django 使用哪个设置文件
    command: celery -A prj_dept.celery:app worker --loglevel=info
    depends_on:
      - redis
      - web
    networks:
      - web_network


  flower:
    image: mher/flower
    command: celery --broker=redis://redis:6379/1 flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - redis
    networks:
      - web_network


volumes:
  staticfiles-data:
    external: true
    name: staticfiles-data
  mysql-data:
    external: true
    name: mysql-data

networks:
  web_network:
    external: true
    name: web_network
  grafana_nginx_proxy_network:
    external: true
    name: grafana_nginx_proxy_network